{
	"name": "PL_Master_Source_Load",
	"properties": {
		"description": "Master pipeline to start the source load.",
		"activities": [
			{
				"name": "ACT_LKP_SourceLoadStart",
				"description": "Execute SP to determine whether to start the source load or not",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlSource",
						"sqlReaderStoredProcedureName": "[EtlLog].[uspSourcePipelineStartLog]",
						"storedProcedureParameters": {
							"LoadType": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.LoadType",
									"type": "Expression"
								}
							},
							"PipelineRunID": {
								"type": "Guid",
								"value": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							},
							"RunFrequencyDurationUnit": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.Frequency",
									"type": "Expression"
								}
							},
							"SliceDateTime": {
								"type": "DateTime",
								"value": {
									"value": "@coalesce(pipeline().parameters.SliceStartTime, pipeline().parameters.TriggerStartTime)",
									"type": "Expression"
								}
							},
							"SourceName": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.Source",
									"type": "Expression"
								}
							},
							"ToBeReRun": {
								"type": "Boolean",
								"value": {
									"value": "@if(equals(coalesce(pipeline().parameters.SliceStartTime, pipeline().parameters.TriggerStartTime), pipeline().parameters.SliceStartTime), true, false)",
									"type": "Expression"
								}
							},
							"ToBeResumed": {
								"type": "Boolean",
								"value": {
									"value": "@pipeline().parameters.ToBeResumed",
									"type": "Expression"
								}
							}
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_ASQL_Operations",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "ACT_LKP_GetSourceObjects",
				"description": "Execute SP to get all the source objects",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "ACT_LKP_SourceLoadStart",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlSource",
						"sqlReaderStoredProcedureName": "[EtlLog].[uspGetSourceObjectDetails]",
						"storedProcedureParameters": {
							"LoadType": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.LoadType",
									"type": "Expression"
								}
							},
							"SliceDateTime": {
								"type": "DateTime",
								"value": {
									"value": "@coalesce(pipeline().parameters.SliceStartTime, pipeline().parameters.TriggerStartTime)",
									"type": "Expression"
								}
							},
							"SourceID": {
								"type": "Int32",
								"value": {
									"value": "@activity('ACT_LKP_SourceLoadStart').output.firstRow.SourceID",
									"type": "Expression"
								}
							},
							"ToBeResumed": {
								"type": "Boolean",
								"value": {
									"value": "@pipeline().parameters.ToBeResumed",
									"type": "Expression"
								}
							},
							"ToBeReRun": {
								"type": "Boolean",
								"value": {
									"value": "@if(equals(coalesce(pipeline().parameters.SliceStartTime, pipeline().parameters.TriggerStartTime), pipeline().parameters.SliceStartTime), true, false)",
									"type": "Expression"
								}
							},
							"RunFrequencyDurationUnit": {
								"value": {
									"value": "@pipeline().parameters.Frequency",
									"type": "Expression"
								}
							}
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_ASQL_Operations",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ACT_SP_SourceLoadFailure",
				"description": "Execute SP to update the source load failure.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "ACT_LKP_GetSourceObjects",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[EtlLog].[uspUpdatePipelineLog]",
					"storedProcedureParameters": {
						"PipelineLogID": {
							"value": {
								"value": "@activity('ACT_LKP_SourceLoadStart').output.FirstRow.PipelineLogID",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"PipelineStatus": {
							"value": "Failed",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_ASQL_Operations",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "ACT_SP_SourceLoadSuccess",
				"description": "Execute SP to update the source load success.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "ACT_FEACH_SourceObjects",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[EtlLog].[uspUpdatePipelineLog]",
					"storedProcedureParameters": {
						"PipelineLogID": {
							"value": {
								"value": "@activity('ACT_LKP_SourceLoadStart').output.firstRow.PipelineLogID",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"PipelineStatus": {
							"value": "Succeeded",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_ASQL_Operations",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "ACT_FEACH_SourceObjects",
				"description": "Iterate over source objects to load.",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "ACT_LKP_GetSourceObjects",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('ACT_LKP_GetSourceObjects').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "ACT_IF_FILES",
							"description": "If the source to load is FILES.",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(toLower(pipeline().parameters.Source), 'promoopt')",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "PL_FILES_Load",
										"description": "Execute File based Child pipeline",
										"type": "ExecutePipeline",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"pipeline": {
												"referenceName": "PL_Child_FTP_Load",
												"type": "PipelineReference"
											},
											"waitOnCompletion": true,
											"parameters": {
												"ParentPipelineLogID": {
													"value": "@activity('ACT_LKP_SourceLoadStart').output.firstRow.PipelineLogID",
													"type": "Expression"
												},
												"SourceID": {
													"value": "@activity('ACT_LKP_SourceLoadStart').output.firstRow.SourceID",
													"type": "Expression"
												},
												"SourceObjectID": {
													"value": "@item().SourceObjectID",
													"type": "Expression"
												},
												"SliceDateTime": {
													"value": "@coalesce(pipeline().parameters.SliceStartTime, pipeline().parameters.TriggerStartTime)",
													"type": "Expression"
												},
												"ToBeResumed": {
													"value": "@pipeline().parameters.ToBeResumed",
													"type": "Expression"
												},
												"Frequency": {
													"value": "@pipeline().parameters.Frequency",
													"type": "Expression"
												},
												"LoadStartDateTime": {
													"value": "@item().LastRefreshDate",
													"type": "Expression"
												},
												"LoadType": {
													"value": "@pipeline().parameters.LoadType",
													"type": "Expression"
												}
											}
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "ACT_SP_SourceLoad_Failure",
				"description": "Execute SP to update the source load failure.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "ACT_FEACH_SourceObjects",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[EtlLog].[uspUpdatePipelineLog]",
					"storedProcedureParameters": {
						"PipelineLogID": {
							"value": {
								"value": "@activity('ACT_LKP_SourceLoadStart').output.firstRow.PipelineLogID",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"PipelineStatus": {
							"value": "Failed",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_ASQL_Operations",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"Source": {
				"type": "string",
				"defaultValue": "promoopt"
			},
			"SliceStartTime": {
				"type": "string",
				"defaultValue": "12/02/2020"
			},
			"LoadType": {
				"type": "string",
				"defaultValue": "Full"
			},
			"ToBeResumed": {
				"type": "bool",
				"defaultValue": false
			},
			"Frequency": {
				"type": "string",
				"defaultValue": "DAY"
			},
			"TriggerStartTime": {
				"type": "string"
			}
		},
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}